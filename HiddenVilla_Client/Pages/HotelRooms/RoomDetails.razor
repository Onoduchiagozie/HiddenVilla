@page "/hotel/room-details/{Id:int}"
@inject Blazored.LocalStorage.ILocalStorageService _localStorage;
@inject IHotelRoomService _hotelroomservice

<ToastContainer />
@if(HotelRoomOrderVm?.OrderDetails?.hotelRoomDTO?.HotelImages == null)
{
    <div class="spinner"></div>
}
else
{
    <div class="mt-4 mx-4 px-0 px-md-5 mx-md-5">

        <div class="row p-2 my-3 " style="border-radius:20px; ">
            <div class="col-12 col-lg-7 p-4" style="border: 1px solid #fff">
                <div class="row px-2 text-success border-bottom">
                    <div class="col-8 py-1"><p style="font-size:x-large;margin:0px;">Selected Room</p></div>
                    <div class="col-4 p-0"><a href="hotel/rooms" class="btn btn-secondary btn-block">Back to Room's</a></div>
                </div>

                <div class="row">
                    <div class="col-6">
                        <div id="" class="carousel slide mb-4 m-md-3 m-0 pt-3 pt-md-0" data-ride="carousel">
                            <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                                <ol class="carousel-indicators">
                                    <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
                                    <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
                                </ol>
                                <div class="carousel-inner">
                                    <div class="carousel-item active">
                                        <img class="d-block w-100" src="images/slide1.jpg" alt="First slide">
                                    </div>
                                </div>
                                <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="col-6">
                        <span class="float-right pt-4">
                            <span class="float-right">Max Occupancy : @HotelRoomOrderVm.OrderDetails.hotelRoomDTO.Occupancy adults </span><br />
                            <span class="float-right pt-1">Villa Size : @HotelRoomOrderVm.OrderDetails.hotelRoomDTO.SqFt sqft</span><br />
                            <h4 class="text-warning font-weight-bold pt-5 pl-5">
                                USD <span style="border-bottom:1px solid #ff6a00">
                                    @HotelRoomOrderVm.OrderDetails.hotelRoomDTO.TotalAmount.ToString("c")
                                </span>
                            </h4>
                            <span class="float-right">Cost for @HotelRoomOrderVm.OrderDetails.hotelRoomDTO.TotalDays nights</span>
                        </span>
                    </div>
                </div>
                <div class="row p-2">
                    <div class="col-12">
                        <p class="card-title text-warning" style="font-size:xx-large"> @HotelRoomOrderVm.OrderDetails.hotelRoomDTO.Name</p>
                        <p class="card-text" style="font-size:large">
                            @((MarkupString)@HotelRoomOrderVm.OrderDetails.hotelRoomDTO.Details)
                        </p>
                    </div>

                </div>
            </div>

            <div class="col-12 col-lg-5 p-4 2 mt-4 mt-md-0" style="border: 1px solid #fff;">
                <EditForm Model="HotelRoomOrderVm" class="container" OnValidSubmit="HandleCheckout">


                    <div class="row px-2 text-success border-bottom"><div class="col-7 py-1"><p style="font-size:x-large;margin:0px;">Enter Details</p></div></div>

                    <div class="form-group pt-2">
                        <label class="text-warning">Name</label>
                        <InputText @bind-Value="HotelRoomOrderVm.OrderDetails.Name" type="text" class="form-control" />
                    </div>
                   
                    <div class="form-group">
                        <label class="text-warning">Email</label>
                        <InputText @bind-Value="HotelRoomOrderVm.OrderDetails.Email" type="text" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="text-warning">Check in Date</label>
                        <InputDate @bind-Value="HotelRoomOrderVm.OrderDetails.CheckInDate" disabled class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="text-warning">Check Out Date</label>
                        <InputDate @bind-Value="HotelRoomOrderVm.OrderDetails.CheckOutDate"  disabled="disabled" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="text-warning">No. of nights</label>
                        <select value="@NoOfNights" @onchange="HandleNoOfNightChange" class="form-control" >
                            @for (var i = 1; i <= 10; i++)
                            {
                                if (i == NoOfNights)
                                {
                                    <option value="@i" selected="selected">@i</option>
                                }
                                else
                                {
                                      <option value="@i">@i</option>
                                }

                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-success form-control">Checkout Now</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>

}




@code {
    [Parameter]
    public int? Id { get; set; }

    public RoomOrderVm HotelRoomOrderVm { get; set; } = new RoomOrderVm();

    public int NoOfNights { get; set; } = 1;

    [Inject] 
    protected Sotsera.Blazor.Toaster.IToaster toast { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            HotelRoomOrderVm.OrderDetails = new RoomOrderDetails();
            if( Id != null)
            {
                if (await _localStorage.GetItemAsync<HomeVm>("RoomBookingInfo") != null)
                {
                    var initialRoomInfo = await _localStorage.GetItemAsync<HomeVm>("RoomBookingInfo");

                    HotelRoomOrderVm.OrderDetails.hotelRoomDTO = await _hotelroomservice.GetHotelRoomDetails(Id.Value, 
                        initialRoomInfo.StartDate.ToString("MM/dd/yyyy"),initialRoomInfo.EndDate.ToString("MM/dd/yyyy"));

                    NoOfNights = initialRoomInfo.NoOfNights;

                    HotelRoomOrderVm.OrderDetails.CheckInDate = initialRoomInfo.StartDate;
                    HotelRoomOrderVm.OrderDetails.CheckOutDate = initialRoomInfo.EndDate;

                    HotelRoomOrderVm.OrderDetails.hotelRoomDTO.TotalDays = initialRoomInfo.NoOfNights;

                    HotelRoomOrderVm.OrderDetails.hotelRoomDTO.TotalAmount =
                    initialRoomInfo.NoOfNights * HotelRoomOrderVm.OrderDetails.hotelRoomDTO.RegularRate;


                }
                else
                {
                    HotelRoomOrderVm.OrderDetails.hotelRoomDTO = await _hotelroomservice.GetHotelRoomDetails(Id.Value,
                     DateTime.Now.ToString("MM/dd/yyyy"),DateTime.Now.AddDays(1).ToString("MM/dd/yyyy"));

                    NoOfNights = 1;

                    HotelRoomOrderVm.OrderDetails.CheckInDate = DateTime.Now;
                    HotelRoomOrderVm.OrderDetails.CheckOutDate = DateTime.Now.AddDays(1);

                    HotelRoomOrderVm.OrderDetails.hotelRoomDTO.TotalDays = 1;

                    HotelRoomOrderVm.OrderDetails.hotelRoomDTO.TotalAmount =
                     HotelRoomOrderVm.OrderDetails.hotelRoomDTO.RegularRate;
                }
            }
        }
        catch(Exception e)
        {
            throw e;
        }


    }

    private async Task HandleCheckout()
    {
        if(!await Validation())
        {
            return;
        }
    }

    private async Task<bool> Validation()
    {
        if (string.IsNullOrEmpty(HotelRoomOrderVm.OrderDetails.Name))
        {
            toast.Error("Name is empty");
            return false;
        }
        return true;
    }
    private async Task HandleNoOfNightChange(ChangeEventArgs e)
    {
        NoOfNights = Convert.ToInt32(e.Value.ToString());
        HotelRoomOrderVm.OrderDetails.hotelRoomDTO =    await _hotelroomservice.GetHotelRoomDetails(Id.Value
            ,HotelRoomOrderVm.OrderDetails.CheckInDate.ToString("MM/dd/yyyy"),
        HotelRoomOrderVm.OrderDetails.CheckInDate.AddDays(NoOfNights).ToString("MM/dd/yyyy"));


        HotelRoomOrderVm.OrderDetails.CheckOutDate = HotelRoomOrderVm.OrderDetails.CheckInDate.AddDays(NoOfNights);
        HotelRoomOrderVm.OrderDetails.hotelRoomDTO.TotalDays = NoOfNights;
        HotelRoomOrderVm.OrderDetails.hotelRoomDTO.TotalAmount = NoOfNights * HotelRoomOrderVm.OrderDetails.hotelRoomDTO.RegularRate;

        toast.Warning("Number Of Nights Updated");

    }



}
